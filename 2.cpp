#include <iostream>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;
void TrapezoidArea(double b1, double b2, double h) {
    double area = 0.5 * (b1 + b2) * h; // переменная с формулой трапеции
    cout << "Площадь трапеции = " << area << endl;
}
void CircleLength(double radius, const double PI){
    double length = 2 * PI * radius; // переменная с формулой длины окружности
    cout << "Длина окружности: " << length << endl;
}
void CircleArea(double radius, const double PI) {
    double area = PI * radius * radius; // переменная с формулой площади окружности
    cout << "Площадь круга: " << area << endl;
}
void RightTriangleArea(double base, double height) {
    double area = 0.5 * base * height; // переменная с формулой площади прямоугольного треугольника
    cout << "Площадь прямоугольного треугольника: " << area << endl;
}
void RightTriangleHypotenuse(double base, double height) {
    double hypotenuse = sqrt(base * base + height * height); // переменная с формулой гипотенузы прямоугольного треугольника
    cout << "Гипотенуза прямоугольного треугольника: " << hypotenuse << endl;
}
void SumDigitsFourDigitNumber (int number) {
    int digit = 0, sum = 0;
    digit = number / 1000; // 1 цифра
    sum += digit;
    number %= 1000;
    digit = number / 100; // 2 цифра
    sum += digit;
    number %= 100;
    digit = number / 10; // 3 цифра
    sum += digit;
    number %= 10;
    sum += number; // 4 цифра
    cout << "Сумма цифр числа: " << sum << endl;
}
void RadiusPolarToCartesian(double x, double y) {
    double r = sqrt(x * x + y * y); // переменная с формулой радиуса
    cout << "Радиус r: " << r << endl;
}
void ThetaPolarToCartesian(double x, double y) {
    double theta = atan2(y, x); // переменная с формулой угла тета
    cout << "Угол theta в радианах: " << theta << endl;
}
void XCartesianToPolar(double r, double theta) {
    double x = r * cos(theta); // переменная с формулой вычисления координаты х
    cout << "Значение x: " << x << endl;
}
void YCartesianToPolar(double r, double theta) {
    double y = r * sin(theta); // переменная с формулой вычисления координаты у
    cout << "Значение y: " << y << endl;
}
void RootsQuadraticEquation(double a, double b, double c) {
    double discriminant = b * b - 4 * a * c; // переменная с формулой дискриминанта
    if (discriminant > 0) { // если дискриминант больше 0 то вычисляем 2 корня по формуле
        double root1 = (-b + sqrt(discriminant)) / (2 * a);
        double root2 = (-b - sqrt(discriminant)) / (2 * a);
        cout << "Корень 1: " << root1 << endl;
        cout << "Корень 2: " << root2 << endl;
    }
    else if (discriminant == 0) { // если дискриминант равен 0 то вычисляем 1 корень по формуле
        double root = -b / (2 * a);
        cout << "У уравнения один корень: " << root << endl;
    }
    else if (discriminant < 0) { // если дискриминант меньше 0 то корней нет
        cout << "Корней нет" << endl;
    }
}
void MediansTriangle(double a, double b, double c) { 
    double ma = 0.5 * sqrt(2 * b * b + 2 * c * c - a * a); // формула вычисления медианы проведенной к стороне a
    double mb = 0.5 * sqrt(2 * c * c + 2 * a * a - b * b); // формула вычисления медианы проведенной к стороне b
    double mc = 0.5 * sqrt(2 * a * a + 2 * b * b - c * c); // формула вычисления медианы проведенной к стороне с
    cout << "Длина медианы, проведенной к стороне a: " << ma << endl;
    cout << "Длина медианы, проведенной к стороне b: " << mb << endl;
    cout << "Длина медианы, проведенной к стороне c: " << mc << endl;
}
void SecondsToHoursMinutes(int k) {
    int hours = k / 3600; // перевод секунд в часы (целочисленно)
    int minutes = (k % 3600) / 60; // перевод секунд в минуты (целочисленно)
    cout << "Прошло целых часов: " << hours << endl;
    cout << "Прошло целых минут: " << minutes << endl;
}
void Isosceles(double a, double b, double c) {
    if (a == b || a == c || b == c) { // проверка на равнобедренность
        cout << "Треугольник со сторонами a, b, c является равнобедренным." << endl;
    }
    else { // иначе
        cout << "Треугольник со сторонами a, b, c не является равнобедренным." << endl;
    }
}
void DiscountedCost(double totalCost) {
    if (totalCost > 1000) { // проверка переменной больше 1000
        double discountedCost = totalCost * 0.9;  // Применяем скидку 10%
        cout << "Стоимость покупки с учетом скидки: " << discountedCost << endl;
    }
    else { // иначе
        cout << "Сумма покупки не превышает 1000 рублей, скидка не предоставляется." << endl;
    }
}
void IdealWeight(double height, double weight) {
    double idealWeight = height - 100; // формула идеального веса
    if (weight < idealWeight) { // если вес меньше идеального
        cout << "Ваш текущий вес ниже идеального. Рекомендуется набрать вес." << endl;
    }
    else if (weight > idealWeight) { // если вес больше идеального
        cout << "Ваш текущий вес выше идеального. Рекомендуется похудеть." << endl;
    }
    else { // если вес равен идеальному
        cout << "Ваш текущий вес идеальный. Нет необходимости в изменениях." << endl;
    }
}
void Randomize() {
    srand(time(0)); // инициализация генератора случайных чисел
    int num1 = rand() % 9 + 1; // Генерация двух случайных чисел от 1 до 9
    int num2 = rand() % 9 + 1;
    cout << "Вычислите произведение чисел " << num1 << " и " << num2 << ": ";
    int answer; // переменная ответа пользователя
    cin >> answer; // ввод ответа пользователя
    int product = num1 * num2; // Вычисление правильного ответа
    if (answer == product) { // при правильном ответе пользователем
        cout << "Правильно! Результат произведения чисел " << num1 << " и " << num2 << " равен " << product << "." << endl;
    }
    else { // иначе
        cout << "Неверно. Правильный ответ - " << product << "." << endl;
    }
}
void TotalCost(int duration, int dayOfWeek) {
    const double weekendRate = 0.5 * 0.8; // Стоимость переговоров в выходные дни со скидкой (руб./мин.)
    const double regularRate = 0.5; // Стоимость переговоров в будние дни (руб./мин.)
    if (dayOfWeek == 6 || dayOfWeek == 7) { // Проверка, является ли день субботой или воскресеньем
        cout << "Стоимость переговоров составляет: " << duration * weekendRate << " рублей." << endl; // Применение скидки к стоимости переговоров
    }
    else { // иначе
        cout << "Стоимость переговоров составляет: " << duration * regularRate << " рублей." << endl; // Использование обычной стоимости переговоров
    }
}
void MonthNameAndSeason(int monthNumber) {
    string monthName = "";
    string season = "";
        if (monthNumber == 12 && monthNumber >= 1 && monthNumber <= 2) { // если число месяца 12 1 2
            if (monthNumber == 12) monthName = "Декабрь";
            if (monthNumber == 1) monthName = "Январь";
            if (monthNumber == 2) monthName = "Февраль";
            season = "Зима";
        }
        else if (monthNumber >= 3 && monthNumber <= 5) { // если число месяца 3 4 5
            if (monthNumber == 3) monthName = "Март";
            if (monthNumber == 4) monthName = "Апрель";
            if (monthNumber == 5) monthName = "Май";
            season = "Весна";
        }
        else if (monthNumber >= 6 && monthNumber <= 8) { // если число месяца 6 7 8
            if (monthNumber == 6) monthName = "Июнь";
            if (monthNumber == 7) monthName = "Июль";
            if (monthNumber == 8) monthName = "Август";
            season = "Лето";
        }
        else if (monthNumber >= 9 && monthNumber <= 11) { // если число месяца 9 10 11
            if (monthNumber == 9) monthName = "Сентябрь";
            if (monthNumber == 10) monthName = "Октябрь";
            if (monthNumber == 11) monthName = "Ноябрь";
            season = "Осень";
        }
        cout << "Месяц " << monthNumber << " - " << monthName << ", время года: " << season << endl;
    }

void LuckyNumber(int number) {
        int digit1 = number / 100000; // переменные цифр числа number
        int digit2 = (number / 10000) % 10;
        int digit3 = (number / 1000) % 10;
        int digit4 = (number / 100) % 10;
        int digit5 = (number / 10) % 10;
        int digit6 = number % 10;
        if (digit1 + digit2 + digit3 == digit4 + digit5 + digit6) { // сумма первых трех равна вторых трех
            cout << "Это счастливое число." << endl;
        }
        else { // иначе
            cout << "Это не счастливое число." << endl;
        }
}
void Kopeika(int number) {
        if (number % 10 == 1 && number != 11) { // -а
            cout << number << " копейка" << endl;
        }
        else if ((number % 10 == 2 || number % 10 == 3 || number % 10 == 4) && (number != 12 && number != 13 && number != 14)) { // -и
            cout << number << " копейки" << endl;
        }
        else { // иначе -ек
            cout << number << " копеек" << endl;
    }
}
void Palindrome(int number) {
    int reversedNumber = 0;
        int originalNumber = number;
        // Обратный порядок цифр числа
        while (number != 0) { // вычисление обратного числа путем поочередного извлечения цифр и добавления их к "reversedNumber"
            int remainder = number % 10;
            reversedNumber = reversedNumber * 10 + remainder;
            number /= 10;
        }
        if (originalNumber == reversedNumber) { // проверка
            cout << "Да, это четырехзначное число является палиндромом." << endl;
        }
        else {
            cout << "Нет, это четырехзначное число не является палиндромом." << endl;
        }
}
void Task19(int number, double b) {
        int digit1 = number / 100; // Первая цифра числа
        int digit2 = (number / 10) % 10; // Вторая цифра числа
        int digit3 = number % 10; // Третья цифра числа
        int product = digit1 * digit2 * digit3; // Произведение цифр
        int sum = digit1 + digit2 + digit3; // Сумма цифр
        if (product > b) { // проверка 
            cout << "Произведение цифр больше числа b." << endl;
        }
        if (product = b) {// иначе
            cout << "Произведение цифр равно числу b." << endl;
        }
        if (product < b) {// иначе
            cout << "Произведение цифр меньше числу b." << endl;
        }
        if (sum % 7 == 0) { // проверка - остатка от деления нет
            cout << "Сумма цифр кратна 7." << endl;
        }
        else {// иначе
            cout << "Сумма цифр не кратна 7." << endl;
        }
}
void Rectangles(double a, double b, double c, double d) {
    if ((a <= c && b <= d) || (a <= d && b <= c)) { // проверка выполнения условия
        cout << "Прямоугольник со сторонами a, b можно поместить в прямоугольник со сторонами c, d." << endl;
    }
    else { // иначе
        cout << "Прямоугольник со сторонами a, b нельзя поместить в прямоугольник со сторонами c, d." << endl;
    }
}
void Measurements() {
    cout << "Размеры основных типов данных в байтах:" << endl;
    cout << "Размер типа char: " << sizeof(char) << " байт" << endl;
    cout << "Размер типа int: " << sizeof(int) << " байт" << endl;
    cout << "Размер типа float: " << sizeof(float) << " байт" << endl;
    cout << "Размер типа double: " << sizeof(double) << " байт" << endl;
    cout << "Размер типа bool: " << sizeof(bool) << " байт" << endl;
    cout << "Размер типа void: " << sizeof(void*) << " байт" << endl;
    cout << "Вывод: Размер тип char - 1 байт, int - 4 байта, float - 4 байта, double - 8 байт, bool - 1 байт. Размер void зависит от разрядности операционной системы: 4 байта на 32-битной системе и 8 байт на 64-битной системе." << endl;
}
int main() {
    setlocale(LC_ALL, ""); //локализация
    cout << "1. Площадь трапеции.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        double b1 = 0, b2 = 0, h = 0, radius = 0, base = 0, height = 0, area = 0, length = 0, hypotenuse = 0, sum = 0, x = 0, y = 0, r = 0, theta = 0, a = 0, b = 0, c = 0, d = 0, discriminant = 0, root = 0, ma = 0, mb = 0, mc = 0, cost = 0, totalCost = 0, discountedCost = 0, weight = 0, idealWeight = 0; // вещественные переменные
        int digit = 0, k = 0, hours = 0, minutes = 0, product = 0, answer = 0, duration = 0, number = 0, num1 = 0, num2 = 0, dayOfWeek = 0, monthNumber = 0, digit1 = 0, digit2 = 0, digit3 = 0, digit4 = 0, digit5 = 0, digit6 = 0, originalNumber = 0, reversedNumber = 0, remainder = 0; // целочисленные переменные
        const double PI = 3.141592653589793;  // постоянная переменная
        const double regularRate = 0.5; // Стоимость переговоров в будние дни (руб./мин.)
        const double weekendRate = 0.5 * 0.8; // Стоимость переговоров в выходные дни со скидкой (руб./мин.)
        /*Task 1*/
        cout << "Введите длину первого основания трапеции: ";
        cin >> b1; // ввод переменной
        cout << "Введите длину второго основания трапеции: ";
        cin >> b2; // ввод переменной
        cout << "Введите высоту трапеции: ";
        cin >> h; // ввод переменной
        TrapezoidArea(b1, b2, h); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 2*/
        cout << "2. Длина окружности и площадь круга.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите радиус круга: ";
        cin >> radius; // ввод переменной
        CircleLength(radius, PI);  // выполнение функции для введенных переменных
        CircleArea(radius, PI); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 3*/
        cout << "3. Площадь прямоугольного треугольника, гипотенуза.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите длину основания прямоугольного треугольника: ";
        cin >> base; // ввод переменной
        cout << "Введите высоту прямоугольного треугольника: ";
        cin >> height; // ввод переменной
        RightTriangleArea(base, height); // выполнение функции для введенных переменных
        RightTriangleHypotenuse(base, height); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 4*/
        cout << "4. Сумма цифр 4-значного числа.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите четырехзначное число: ";
        cin >> number; // ввод переменной
        while (number < 1000 || number > 9999) { //
            cout << "Пожалуйста, введите четырехзначное число: ";
            cin >> number; // ввод переменной заново
        }
        SumDigitsFourDigitNumber(number); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 5*/
        cout << "5. Переход от декартовых координат к полярным.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите значение x: ";
        cin >> x;  // ввод переменной
        cout << "Введите значение y: ";
        cin >> y; // ввод переменной
        RadiusPolarToCartesian(x, y); // выполнение функции для введенных переменных
        ThetaPolarToCartesian(x, y); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 6*/
        cout << "6. Переход от полярных координат к декартовым.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите значение r: ";
        cin >> r; // ввод переменной
        cout << "Введите угол theta в радианах: ";
        cin >> theta; // ввод переменной
        XCartesianToPolar(r, theta); // выполнение функции для введенных переменных
        YCartesianToPolar(r, theta); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 7*/
        cout << "7. Корни квадратного уравнения.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите значение a: ";
        cin >> a; // ввод переменной
        cout << "Введите значение b: ";
        cin >> b; // ввод переменной
        cout << "Введите значение c: ";
        cin >> c; // ввод переменной
        RootsQuadraticEquation(a, b, c); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 8*/
        cout << "8. Медианы треугольника, сторонами которого являются медианы исходного треугольника.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите длину стороны a: ";
        cin >> a; // ввод переменной
        cout << "Введите длину стороны b: ";
        cin >> b; // ввод переменной
        cout << "Введите длину стороны c: ";
        cin >> c; // ввод переменной
        MediansTriangle(a, b, c); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 9*/
        cout << "9. Сколько целых часов и целых минут прошло с начала суток.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите значение k (секунды с начала суток): ";
        cin >> k; // ввод переменной
        SecondsToHoursMinutes(k); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 10*/
        cout << "10. Является ли треугольник со сторонами a, b, c равнобедренным.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите длину стороны a: ";
        cin >> a; // ввод переменной
        cout << "Введите длину стороны b: ";
        cin >> b; // ввод переменной
        cout << "Введите длину стороны c: ";
        cin >> c; // ввод переменной
        Isosceles(a, b, c); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 11*/
        cout << "11. Вычислить стоимость покупки с учётом скидки.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите общую стоимость покупки: ";
        cin >> totalCost; // ввод переменной
        DiscountedCost(totalCost); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 12*/
        cout << "12. Дать рекомендации пользователю с известным ростом и весом похудеть или поправиться.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите ваш рост в сантиметрах: ";
        cin >> height; // ввод переменной
        cout << "Введите ваш текущий вес в килограммах: ";
        cin >> weight; // ввод переменной
        IdealWeight(height, weight); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 13*/
        cout << "13. Проверка решения произведения двух случайных чисел.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        Randomize(); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 14*/
        cout << "14. Вычисления стоимости переговоров.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите продолжительность разговора (в минутах): ";
        cin >> duration; // ввод переменной
        cout << "Введите день недели (число от 1 до 7, где 1 - понедельник, 7 - воскресенье): ";
        cin >> dayOfWeek; // ввод переменной
        TotalCost(duration, dayOfWeek); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 15*/
        cout << "15. Название месяца и времени года.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите номер месяца (от 1 до 12): ";
        cin >> monthNumber; // ввод переменной
        while (monthNumber < 1 || monthNumber>12) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введено некорректное число. Введите число от 1 до 99: ";
            cin >> monthNumber; // ввод переменной
        }
        MonthNameAndSeason(monthNumber); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 16*/
        cout << "16. Является ли натуральное 6-значное число счастливым.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите натуральное 6-значное число число: ";
        cin >> number; // ввод переменной
        while (number < 100000 || number > 999999) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введено не 6-значное число. Введите натуральное 6-значное число: ";
            cin >> number; // ввод переменной
        }
        LuckyNumber(number); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 17*/
        cout << "17. Слово копейка к числу в правильной форме.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите число от 1 до 99: ";
        cin >> number; // ввод переменной
        while (number < 1 || number>99) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введено некорректное число. Введите число от 1 до 99: ";
            cin >> number; // ввод переменной
        }
        Kopeika(number); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 18*/
        cout << "18. Является ли натуральное 4-значное число палиндромом.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите натуральное 4-значное число: ";
        cin >> number; // ввод переменной
        while (number < 1000 || number > 9999) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введено не 4-значное число. Введите натуральное 4-значное число: ";
            cin >> number; // ввод переменной
        }
        Palindrome(number); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 19*/
        cout << "19. Является ли произведение его цифр больше числа b, кратна ли 7 сумма его цифр.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите трехзначное число: ";
        cin >> number; // ввод переменной
        while (number < 100 || number > 999) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введено не 3-значное число. Введите натуральное 3-значное число: ";
            cin >> number; // ввод переменной
        }
        cout << "Введите число b: ";
        cin >> b; // ввод переменной
        Task19(number, b); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 20*/
        cout << "20. Можно ли прямоугольник со сторонами a, b поместить в прямоугольник со сторонами c, d так, чтобы стороны одного прямоугольника были параллельны сторонам другого.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        cout << "Введите длину стороны a: ";
        cin >> a; // ввод переменной
        cout << "Введите длину стороны b: ";
        cin >> b; // ввод переменной
        cout << "Введите длину стороны c: ";
        cin >> c; // ввод переменной
        cout << "Введите длину стороны d: ";
        cin >> d; // ввод переменной
        while (a <= 0 || b <= 0 || c <= 0 || d <= 0) { // проверка на корректность введенных переменных и повтор ввода при неккоректности
            cout << "Введена некорректная величина стороны a. Повторите ввод сначала." << endl;
            cout << "Введите длину стороны a: ";
            cin >> a; // ввод переменной заново
            cout << "Введите длину стороны b: ";
            cin >> b; // ввод переменной заново
            cout << "Введите длину стороны c: ";
            cin >> c; // ввод переменной заново
            cout << "Введите длину стороны d: ";
            cin >> d; // ввод переменной заново
        }
        Rectangles(a, b, c, d); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        /*Task 21*/
        cout << "21. Вывести размеры основных типов данных. Сделать выводы.\n";
        cout << "--------------------------------------------------------------------------" << endl;
        Measurements(); // выполнение функции для введенных переменных
        cout << "--------------------------------------------------------------------------" << endl;
        return 0;
}